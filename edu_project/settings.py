"""
Django settings for edu_project project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
# alias python3='/usr/local/bin/python3.11'

from pathlib import Path
import os
from django.conf.global_settings import SECRET_KEY, STATIC_ROOT, STATICFILES_DIRS

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-@jrk2x)qf*0w&1n(b4!7yt!=@ce+p6^lj@!$e4lq@x-c_e^k(1'
SECRET_KEY = os.environ.get('SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get("DEBUG", default=0))
# DEBUG = False

# ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'rocketblog.com', '62.217.181.202']
ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS').split(" ")

INTERNAL_IPS = ["127.0.0.1",]
CSRF_TRUSTED_ORIGINS = ["http://localhost:1337"]



# Application definition,

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'debug_toolbar',
    'django_extensions',
    'mainapp',
    'users',
    'social_django',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'rest_framework',
    'channels',
]

ASGI_APPLICATION = "edu_project.asgi.application"

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayet',
    }
}

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'edu_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
                'templates/'
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'mainapp.context_processors.get_mainapp_context',
            ],
        },
    },
]



WSGI_APPLICATION = 'edu_project.wsgi.application'


# подключение к бд windows из wsl
# winhost = '172.20.16.1'
# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# psql -h winhost -p 5432 -U postgres
# DATABASES = {
#     'default': {
#         'ENGINE': "django.db.backends.postgresql",
#         'NAME': 'eduproject_db',
#         'USER': 'root',
#         'PASSWORD': '1234',
#         'HOST': 'localhost',
#         'PORT': 5432,
#     }
# }

# docker db
DATABASES = {
    "default": {
        "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
        "NAME": os.environ.get("SQL_DATABASE", BASE_DIR / "db.sqlite3"),
        "USER": os.environ.get("SQL_USER", "user"),
        "PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
        "HOST": os.environ.get("SQL_HOST", "localhost"),
        "PORT": os.environ.get("SQL_PORT", "5432"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
if DEBUG:
    STATICFILES_DIRS = [
        BASE_DIR / 'static/'
        ]
else:
    STATIC_ROOT =  BASE_DIR / 'static'
# STATIC_ROOT =  BASE_DIR / 'static'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.dummy.DummyCache", # заглушка кеша
        # "BACKEND": "django.core.cache.backends.redis.RedisCache", # активация кеша 
        # "LOCATION": "redis://127.0.0.1:6379",
    }
}


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



LOGIN_REDIRECT_URL = 'home' # перенаправление после успешного входа в аккаунт
LOGOUT_REDIRECT_URL = 'home' # --
LOGIN_URL = 'users:login' # перенаправление после попытки зайти на закрытую страницу

if DEBUG:
    print("##############################################_DEBUG_##############################################")


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'debug_file': {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': BASE_DIR / 'log' / 'debug.log'
#         },
#         'error_file': {
#             'level': 'ERROR',
#             'class': 'logging.FileHandler',
#             'filename': BASE_DIR / 'log' / 'error.log'
#         }
#     },
#     'loggers': {
#             'django': {
#                 'handlers': ['debug_file'],
#                 'level': 'DEBUG',
#                 'propagate': True,
#             },
#             '': {
#                 'handlers': ['error_file'],
#                 'level': 'ERROR',
#                 'propagate': True,
#             },
#         },
# }

AUTH_USER_MODEL = 'users.User'

SOCIAL_AUTH_JSONFIELD_ENABLED = True

AUTHENTICATION_BACKENDS = [
    'social_core.backends.github.GithubOAuth2',
    'social_core.backends.vk.VKOAuth2',
    'django.contrib.auth.backends.ModelBackend',
    'users.authentication.EmailAuthBackend',
]

DEFAULT_USER_IMAGE = MEDIA_URL + "users/default.png"

##### mail.ru
EMAIL_HOST_PASSWORD = "7aaf7KQBJmdymsnxLf9z"
EMAIL_HOST = "smtp.mail.ru"
EMAIL_PORT = 465
EMAIL_HOST_USER = "django.test@internet.ru"
EMAIL_USE_SSL = True
EMAIL_USE_TLS = False


DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SERVER_EMAIL = EMAIL_HOST_USER
EMAIL_ADMIN = EMAIL_HOST_USER

#github auth
SOCIAL_AUTH_GITHUB_KEY = '19b318141366e9f6c6cd'
SOCIAL_AUTH_GITHUB_SECRET = '6f91cc9bc97a541a9d609fa372a5fc5894a05df2'
#vk auth
SOCIAL_AUTH_VK_OAUTH2_KEY = '51891582'
SOCIAL_AUTH_VK_OAUTH2_SECRET = 'zBklFOYvWFVZah16K2lO'
# дополнительные сведения которые берутся при аторизации vk
SOCIAL_AUTH_VK_OAUTH2_SCOPE = ['email']

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.social_auth.associate_by_email',  # <--- enable this one
    'social_core.pipeline.user.create_user',
    # занесение пользователя в группу social при OAuth2
    'users.pipeline.new_users_handler',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

EMAIL_BACKEND = 'edu_project.backend.email.EmailBackend' # для отправки писем пользователям

CELERY_BROKER_URL = 'redis://localhost:6379'
CELERY_RESULT_BACKEND = 'redis'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'